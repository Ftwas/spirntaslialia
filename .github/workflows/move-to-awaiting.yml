name: Move issue to Awaiting Response on comment

on:
  issue_comment:
    types: [created]

jobs:
  move-card:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Move project card to Awaiting Response
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const issueNumber = context.issue.number;
            const projectName = 'Ftwas's trilili';
            const targetColumnName = 'Awaiting Response';

            // 1. Find the project by name
            const { data: projects } = await github.rest.projects.listForRepo({ owner, repo });
            const project = projects.find(p => p.name === projectName);
            if (!project) throw new Error(`Project "${projectName}" not found`);

            // 2. Find the target column
            const { data: columns } = await github.rest.projects.listColumns({ project_id: project.id });
            const targetColumn = columns.find(c => c.name === targetColumnName);
            if (!targetColumn) throw new Error(`Column "${targetColumnName}" not found`);

            // 3. Find the card for this issue
            //    We need to search all columns, or optimize if you know the source column
            let card;
            for (const col of columns) {
              const { data: cards } = await github.rest.projects.listCards({ column_id: col.id });
              card = cards.find(c => c.content_url?.endsWith(`/issues/${issueNumber}`));
              if (card) break;
            }
            if (!card) throw new Error(`Card for issue #${issueNumber} not found in any column`);

            // 4. Move the card into the "Awaiting Response" column at the top
            await github.rest.projects.moveCard({
              card_id: card.id,
              position: 'top',
              column_id: targetColumn.id
            });
